[["indices-of-ecological-networks-in-web-of-life.html", "Web of life tutorial 1 Indices of ecological networks in Web of Life 1.1 Check the actual size of our samples 1.2 Network size 1.3 Connectance 1.4 Nestedness 1.5 Modularity 1.6 Correlations", " Web of life tutorial Alessandro Vindigni - alessandro.vindigni@ieu.uzh.ch June 2022 1 Indices of ecological networks in Web of Life 1.1 Check the actual size of our samples type_list &lt;- distinct(nestedness_df,network_type)$network_type networks_per_type &lt;- NULL for(nw_type in type_list){ row &lt;- data.frame(nw_type, filter(nestedness_df,network_type == nw_type) %&gt;% nrow()) networks_per_type &lt;- rbind(networks_per_type, row) } rownames(networks_per_type) &lt;- NULL colnames(networks_per_type) &lt;- NULL colnames(networks_per_type) &lt;- c(&quot;network_type&quot;, &quot;count&quot;) networks_per_type ## network_type count ## 1 A_HP 51 ## 2 A_PH 7 ## 3 M_AF 1 ## 4 M_PA 5 ## 5 M_PL 153 ## 6 M_SD 34 We restrict our analysis to types for which we have a sizable amount of networks. analyzed_type_list &lt;- c(&quot;A_HP&quot;,&quot;M_PL&quot;,&quot;M_SD&quot;) nestedness_df &lt;- filter(nestedness_df, network_type %in% analyzed_type_list) connectance_df &lt;- filter(connectance_df, network_type %in% analyzed_type_list) modularity_df &lt;- filter(modularity_df, network_type %in% analyzed_type_list) To visualize the dataframes run nestedness_df %&gt;% formattable() connectance_df %&gt;% formattable() modularity_df %&gt;% formattable() 1.2 Network size ggplot(nestedness_df, aes(x=(num_resources+num_consumers), color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlab(&quot;network size&quot;) + xlim(0, 500) # alpha is the fill transparency ## Warning: Removed 5 rows containing non-finite values (stat_density). aspect ratio resources/consumers ggplot(nestedness_df, aes(x=network_size_ratio, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlab(&quot;resources/consumers&quot;) 1.3 Connectance ggplot(connectance_df, aes(x=connectance, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) # alpha is the fill transparency 1.4 Nestedness ggplot(nestedness_df, aes(x=nestedness_bascompte, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) ggplot(nestedness_df, aes(x=nestedness_weighted, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) ## Warning: Removed 6 rows containing non-finite values (stat_density). ggplot(nestedness_df, aes(x=nestedness_temperature, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) 1.5 Modularity ggplot(modularity_df, aes(x=modularity_fast_greedy, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) # alpha is the fill transparency ggplot(modularity_df, aes(x=modularity_edge_betweenness, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) ggplot(modularity_df, aes(x=modularity_leading_eigen, color=network_type, fill=network_type)) + geom_density(alpha = 0.2) + xlim(0, 1) 1.6 Correlations We build a dataframe with all the relevant indices analyzed_type_list &lt;- c(&quot;A_HP&quot;,&quot;M_PL&quot;,&quot;M_SD&quot;) nestedness_df &lt;- filter(nestedness_df, network_type %in% analyzed_type_list) connectance_df &lt;- filter(connectance_df, network_type %in% analyzed_type_list) modularity_df &lt;- filter(modularity_df, network_type %in% analyzed_type_list) df &lt;- nestedness_df %&gt;% inner_join(.,connectance_df, by = c(&quot;network_name&quot; = &quot;network_name&quot;)) %&gt;% inner_join(.,modularity_df, by = c(&quot;network_name&quot; = &quot;network_name&quot;)) %&gt;% select(&quot;id&quot;, &quot;network_name&quot;, &quot;num_resources.x&quot;, &quot;num_consumers.x&quot;, &quot;network_size_ratio&quot;, &quot;nestedness_bascompte&quot;, &quot;nestedness_weighted&quot;, &quot;nestedness_temperature&quot;, &quot;connectance&quot;, &quot;modularity_fast_greedy&quot;, &quot;modularity_edge_betweenness&quot;, &quot;modularity_leading_eigen&quot;, &quot;network_type&quot;) %&gt;% rename(num_resources = num_resources.x, num_consumers = num_consumers.x) Connectance vs network size aspect ratio options(repr.plot.width=5, repr.plot.height=4) ggplot() + #ggtitle(&quot;correlations&quot;) + geom_point(data = df, aes(x=network_size_ratio, y=connectance, color=network_type), shape=1) + labs(x = &quot;resources/consumers&quot;, y = &quot;connectance&quot;) + xlim(0, 1) ## Warning: Removed 43 rows containing missing values (geom_point). Connectance vs network size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=connectance, color=network_type), shape=1) + stat_function(fun = function(x) power_decay(x,7.,0.9), color =&quot;black&quot;, linetype = &quot;dotted&quot;) + labs(x = &quot;network size&quot;, y = &quot;connectance&quot;) + ylim(0, 1) + scale_x_continuous(trans=&#39;log10&#39;) + scale_y_continuous(trans=&#39;log10&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. nestedness_bascompte vs NW size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=nestedness_bascompte, color=network_type), shape=1) + stat_function(fun = function(x) power_decay(x,7.,0.7), color =&quot;black&quot;, linetype = &quot;dotted&quot;) + labs(x = &quot;network size&quot;, y = &quot;nestedness_bascompte&quot;) + ylim(0, 1) + scale_x_continuous(trans=&#39;log10&#39;) + scale_y_continuous(trans=&#39;log10&#39;) ## Scale for &#39;y&#39; is already present. Adding another scale for &#39;y&#39;, which will ## replace the existing scale. nestedness_weighted vs NW size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=nestedness_weighted, color=network_type), shape=1) + #stat_function(fun = function(x) power_decay(x,7.,0.7), color =&quot;black&quot;, linetype = &quot;dotted&quot;) + labs(x = &quot;network size&quot;, y = &quot;nestedness_weighted&quot;) + scale_x_continuous(trans=&#39;log10&#39;) + scale_y_continuous(trans=&#39;log10&#39;) ## Warning in self$trans$transform(x): NaNs produced ## Warning: Transformation introduced infinite values in continuous y-axis ## Warning: Removed 6 rows containing missing values (geom_point). nestedness_temperature vs NW size The qualitative behavior should be the opposite w.r.t. nestedness_bascompte because \\(T=0\\) corresponds ot a perfectly nested network (Acthung: not observed!). options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=nestedness_temperature, color=network_type), shape=1) + stat_function(fun = function(x) power_decay(x,500.,0.95), color =&quot;black&quot;, linetype = &quot;dotted&quot;) + labs(x = &quot;network size&quot;, y = &quot;nestedness_temperature&quot;) + scale_x_continuous(trans=&#39;log10&#39;) + scale_y_continuous(trans=&#39;log10&#39;) ## Warning: Transformation introduced infinite values in continuous y-axis modularity_fast_greedy vs NW size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=modularity_fast_greedy, color=network_type), shape=1) + labs(x = &quot;network size&quot;, y = &quot;modularity_fast_greedy&quot;) + ylim(0, 1) + scale_x_continuous(trans=&#39;log10&#39;) modularity_edge_betweenness vs NW size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=modularity_edge_betweenness, color=network_type), shape=1) + labs(x = &quot;network size&quot;, y = &quot;modularity_edge_betweenness&quot;) + ylim(0, 1) + scale_x_continuous(trans=&#39;log10&#39;) modularity_leading_eigen vs NW size options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=(num_resources+num_consumers), y=modularity_leading_eigen, color=network_type), shape=1) + labs(x = &quot;network size&quot;, y = &quot;modularity_leading_eigen&quot;) + ylim(0, 1) + scale_x_continuous(trans=&#39;log10&#39;) nestedness_bascompte vs connectance Probably, the apparent strong correlation is due to the fact that both quantities depend on the network size. options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=connectance, y=nestedness_bascompte, color=network_type), shape=1) + stat_function(fun = function(x) power_decay(x,1.5,-0.8), color =&quot;black&quot;, linetype = &quot;dotted&quot;) + labs(x = &quot;connectance&quot;, y = &quot;nestedness_bascompte&quot;) + xlim(0, 1) + ylim(0, 1) ## Warning: Removed 40 row(s) containing missing values (geom_path). modularity_leading_eigen vs connectance options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=connectance, y=modularity_leading_eigen, color=network_type), shape=1) + labs(x = &quot;connectance&quot;, y = &quot;modularity_leading_eigen&quot;) + xlim(0, 1) + ylim(0, 1) modularity_leading_eigen vs nestedness_bascompte options(repr.plot.width=5, repr.plot.height=4) ggplot() + geom_point(data = df, aes(x=nestedness_bascompte, y=modularity_leading_eigen, color=network_type), shape=1) + labs(x = &quot;nestedness_bascompte&quot;, y = &quot;modularity_leading_eigen&quot;) + xlim(0, 1) + ylim(0, 1) "]]
